var mod_pagespeed_MtWWN1MSbt = "(function ($) {\n    'use strict';\n\n    $.ajaxChimp = {\n        responses: {\n            'We have sent you a confirmation email'                                             : 0,\n            'Please enter a valid email'                                                        : 1,\n            'An email address must contain a single @'                                          : 2,\n            'The domain portion of the email address is invalid (the portion after the @: )'    : 3,\n            'The username portion of the email address is invalid (the portion before the @: )' : 4,\n            'This email address looks fake or invalid. Please enter a real email address'       : 5\n        },\n        translations: {\n            'en': null\n        },\n        init: function (selector, options) {\n            $(selector).ajaxChimp(options);\n        }\n    };\n\n    $.fn.ajaxChimp = function (options) {\n        $(this).each(function(i, elem) {\n            var form = $(elem);\n            var email = form.find('input[type=email]');\n            var label = form.find('.info');\n\n            var settings = $.extend({\n                'url': form.attr('action'),\n                'language': 'en'\n            }, options);\n\n            var url = settings.url.replace('/post?', '/post-json?').concat('&c=?');\n\n            form.attr('novalidate', 'true');\n            email.attr('name', 'EMAIL');\n\n            form.submit(function () {\n                var msg;\n                function successCallback(resp) {\n                    if (resp.result === 'success') {\n                        msg = 'We have sent you a confirmation email';\n                        label.removeClass('error').addClass('valid');\n                        email.removeClass('error').addClass('valid');\n                    } else {\n                        email.removeClass('valid').addClass('error');\n                        label.removeClass('valid').addClass('error');\n                        var index = -1;\n                        try {\n                            var parts = resp.msg.split(' - ', 2);\n                            if (parts[1] === undefined) {\n                                msg = resp.msg;\n                            } else {\n                                var i = parseInt(parts[0], 10);\n                                if (i.toString() === parts[0]) {\n                                    index = parts[0];\n                                    msg = parts[1];\n                                } else {\n                                    index = -1;\n                                    msg = resp.msg;\n                                }\n                            }\n                        }\n                        catch (e) {\n                            index = -1;\n                            msg = resp.msg;\n                        }\n                    }\n\n                    // Translate and display message\n                    if (\n                        settings.language !== 'en'\n                        && $.ajaxChimp.responses[msg] !== undefined\n                        && $.ajaxChimp.translations\n                        && $.ajaxChimp.translations[settings.language]\n                        && $.ajaxChimp.translations[settings.language][$.ajaxChimp.responses[msg]]\n                    ) {\n                        msg = $.ajaxChimp.translations[settings.language][$.ajaxChimp.responses[msg]];\n                    }\n                    label.html(msg);\n\n                    label.show(2000);\n                    if (settings.callback) {\n                        settings.callback(resp);\n                    }\n                }\n\n                var data = {};\n                var dataArray = form.serializeArray();\n                $.each(dataArray, function (index, item) {\n                    data[item.name] = item.value;\n                });\n\n                $.ajax({\n                    url: url,\n                    data: data,\n                    success: successCallback,\n                    dataType: 'jsonp',\n                    error: function (resp, text) {\n                        console.log('mailchimp ajax submit error: ' + text);\n                    }\n                });\n\n                // Translate and display submit message\n                var submitMsg = 'Submitting...';\n                if(\n                    settings.language !== 'en'\n                    && $.ajaxChimp.translations\n                    && $.ajaxChimp.translations[settings.language]\n                    && $.ajaxChimp.translations[settings.language]['submit']\n                ) {\n                    submitMsg = $.ajaxChimp.translations[settings.language]['submit'];\n                }\n                label.html(submitMsg).show(2000);\n\n                return false;\n            });\n        });\n        return this;\n    };\n})(jQuery);";
var mod_pagespeed_bcEheDfXrH = "// Avoid `console` errors in browsers that lack a console.\n(function() {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());\n\n// Place any jQuery/helper plugins in here.\n";
var mod_pagespeed_hGUyyqO7BK = "(function ($)\r\n  { \"use strict\"\r\n  \r\n/* 1. Proloder */\r\n    $(window).on('load', function () {\r\n      $('#preloader-active').delay(450).fadeOut('slow');\r\n      $('body').delay(450).css({\r\n        'overflow': 'visible'\r\n      });\r\n    });\r\n\r\n/* 2. sticky And Scroll UP */\r\n    $(window).on('scroll', function () {\r\n      var scroll = $(window).scrollTop();\r\n      if (scroll < 400) {\r\n        $(\".header-sticky\").removeClass(\"sticky-bar\");\r\n        $('#back-top').fadeOut(500);\r\n      } else {\r\n        $(\".header-sticky\").addClass(\"sticky-bar\");\r\n        $('#back-top').fadeIn(500);\r\n      }\r\n    });\r\n\r\n  // Scroll Up\r\n    $('#back-top a').on(\"click\", function () {\r\n      $('body,html').animate({\r\n        scrollTop: 0\r\n      }, 800);\r\n      return false;\r\n    });\r\n  \r\n\r\n/* 3. slick Nav */\r\n// mobile_menu\r\n    var menu = $('ul#navigation');\r\n    if(menu.length){\r\n      menu.slicknav({\r\n        prependTo: \".mobile_menu\",\r\n        closedSymbol: '+',\r\n        openedSymbol:'-'\r\n      });\r\n    };\r\n\r\n/* 4. MainSlider-1 */\r\n    // h1-hero-active\r\n    function mainSlider() {\r\n      var BasicSlider = $('.slider-active');\r\n      BasicSlider.on('init', function (e, slick) {\r\n        var $firstAnimatingElements = $('.single-slider:first-child').find('[data-animation]');\r\n        doAnimations($firstAnimatingElements);\r\n      });\r\n      BasicSlider.on('beforeChange', function (e, slick, currentSlide, nextSlide) {\r\n        var $animatingElements = $('.single-slider[data-slick-index=\"' + nextSlide + '\"]').find('[data-animation]');\r\n        doAnimations($animatingElements);\r\n      });\r\n      BasicSlider.slick({\r\n        autoplay: false,\r\n        autoplaySpeed: 5000,\r\n        dots: false,\r\n        fade: true,\r\n        arrows: false, \r\n        prevArrow: '<button type=\"button\" class=\"slick-prev\"><i class=\"ti-angle-left\"></i></button>',\r\n        nextArrow: '<button type=\"button\" class=\"slick-next\"><i class=\"ti-angle-right\"></i></button>',\r\n        responsive: [{\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              infinite: true,\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              arrows: false\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 767,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              arrows: false\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      function doAnimations(elements) {\r\n        var animationEndEvents = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n        elements.each(function () {\r\n          var $this = $(this);\r\n          var $animationDelay = $this.data('delay');\r\n          var $animationType = 'animated ' + $this.data('animation');\r\n          $this.css({\r\n            'animation-delay': $animationDelay,\r\n            '-webkit-animation-delay': $animationDelay\r\n          });\r\n          $this.addClass($animationType).one(animationEndEvents, function () {\r\n            $this.removeClass($animationType);\r\n          });\r\n        });\r\n      }\r\n    }\r\n    mainSlider();\r\n\r\n/* 5. Testimonial Active*/\r\n\r\n/* 4. Testimonial Active*/\r\n    var testimonial = $('.h1-testimonial-active');\r\n    if(testimonial.length){\r\n    testimonial.slick({\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 1000,\r\n        autoplay:false,\r\n        loop:true,\r\n        arrows: true,\r\n        prevArrow: '<button type=\"button\" class=\"slick-prev\"><i class=\"ti-angle-left\"></i></button>',\r\n        nextArrow: '<button type=\"button\" class=\"slick-next\"><i class=\"ti-angle-right\"></i></button>',\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              infinite: true,\r\n              dots: false,\r\n              arrow:false\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              arrows:false\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              arrows:false,\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n\r\n\r\n/* 6. Nice Selectorp  */\r\n  var nice_Select = $('select');\r\n    if(nice_Select.length){\r\n      nice_Select.niceSelect();\r\n    }\r\n\r\n/* 7. data-background */\r\n    $(\"[data-background]\").each(function () {\r\n      $(this).css(\"background-image\", \"url(\" + $(this).attr(\"data-background\") + \")\")\r\n      });\r\n\r\n\r\n/* 10. WOW active */\r\n    new WOW().init();\r\n\r\n// 11. ---- Mailchimp js --------//  \r\n    function mailChimp() {\r\n      $('#mc_embed_signup').find('form').ajaxChimp();\r\n    }\r\n    mailChimp();\r\n\r\n\r\n// 12 Pop Up Img\r\n    var popUp = $('.single_gallery_part, .img-pop-up');\r\n      if(popUp.length){\r\n        popUp.magnificPopup({\r\n          type: 'image',\r\n          gallery:{\r\n            enabled:true\r\n          }\r\n        });\r\n      }\r\n/* 13. counterUp*/\r\n    $('.counter').counterUp({\r\n      delay: 10,\r\n      time: 3000\r\n    });\r\n\r\n/* 14. Datepicker */\r\n  $('#datepicker1').datepicker();\r\n\r\n// 15. Time Picker\r\n  $('#timepicker').timepicker();\r\n\r\n\r\n})(jQuery);\r\n";
